---
- name: install dependencies
  apt:
    name: '{{ item }}'
    state: present
    update_cache: yes
    cache_valid_time: 3600
  with_items:
    - build-essential
    - tar
    - tcl

- name: check the download status
  stat: path={{ redis_download_file }}
  register: redis_download_check_result

- name: download
  get_url:
    url: '{{ redis_archive_url }}'
    dest: '{{ redis_download_dir }}'
  register: redis_download_result
  when: not redis_download_check_result.stat.exists

- name: extract
  unarchive:
    src: '{{ redis_download_file }}'
    dest: '{{ redis_download_dir }}'
    copy: no
  when: redis_download_result | changed

- name: compile, test, install
  make:
    chdir: '{{ redis_source_dir }}'
    target: '{{ item }}'
  with_items:
    -
    - test
    - install
  when: redis_download_result | changed

- name: create redis group
  group:
    name: '{{ redis_group }}'
    system: yes
    state: present

- name: create redis user
  user:
    name: '{{ redis_user }}'
    group: '{{ redis_group }}'
    system: yes
    state: present

- name: create directory structure
  file:
    state: directory
    path: '{{ item }}'
    owner: '{{ redis_user }}'
    group: '{{ redis_group }}'
    mode: 0755
  with_items:
    - /etc/redis
    - /var/log/redis
    - '/var/lib/redis/{{ redis_port }}'
    - /var/run/redis # default pidfile directory in redis.conf

  # we need to lookup files to set ownership on because `with_fileglob` works
  # with local files and not remote ones
- name: lookup files to set ownership on
  shell: ls -al /usr/local/bin | grep '^-' | awk '{print $9}'
  register: lookup_result

- name: set ownership
  file:
    path: '/usr/local/bin/{{ item }}'
    state: file
    follow: no
    owner: '{{ redis_user }}'
    group: '{{ redis_group }}'
  with_items: '{{ lookup_result.stdout_lines }}'

  # this could become a role
- name: configure PAM
  lineinfile:
    create: true
    dest: /etc/pam.d/common-session
    line: session required pam_limits.so

  # this could become a role
- name: read /proc/sys/fs/file-max
  shell: cat /proc/sys/fs/file-max
  register: filemax_result

  # this could become a role
- name: set nofile for redis user
  pam_limits:
    domain: '{{ redis_user }}'
    limit_type: '{{ item }}'
    limit_item: nofile
    value: '{{ filemax_result.stdout_lines[0] }}'
  with_items:
    - soft
    - hard

- name: manipulate sysctl entries
  sysctl:
    name: '{{ item.name }}'
    value: '{{ item.value }}'
    state: present
  with_items:
    - name: vm.overcommit_memory
      value: 1 # http://redis.io/topics/faq
    - name: net.core.somaxconn
      value: 1024 # arbitrary. Should be gte tcp_backlog in redis.conf (511)
    - name: net.ipv4.tcp_max_syn_backlog
      value: 1024 # arbitrary. Should be gte tcp_backlog in redis.conf (511)

- name: copy redis.conf shipped into the Redis distribution
  copy:
    src: '{{ redis_source_dir }}/redis.conf'
    remote_src: true
    dest: /etc/redis/redis.conf
    owner: '{{ redis_user }}'
    group: '{{ redis_group }}'

- name: copy the default configuration file
  template:
    src: '{{ redis_conf_template_file }}'
    dest: '{{ redis_conf_file }}'
    owner: '{{ redis_user }}'
    group: '{{ redis_group }}'

- name: copy init script
  template:
    src: '{{ redis_init_script_template_file }}'
    dest: '{{ redis_init_script_file }}'
    mode: 0755
    owner: root
    group: root
  notify: restart redis
